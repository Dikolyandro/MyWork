1.Создал интерфейс `State` для определения действий с заказом, таких как оплата и доставка.
2.Реализовал состояния заказа (Новый, Оплаченный, Отправленный и т.д.),
которые определяют поведение для каждого действия.
3.Создал класс `Order`, который хранит текущее состояние заказа и делегирует
действия соответствующему состоянию.
4.Добавил методы для изменения состояния заказа в зависимости от действий, таких как оплата и отмена.
5.В классе `Main` показал работу системы, демонстрируя изменения состояния заказа в различных сценариях.

State pattern позволяет объекту изменять свое поведение в зависимости от текущего состояния.
Это удобно для управления состояниями, такими как заказ в интернет-магазине, где действия
могут различаться в зависимости от статуса заказа.